// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(InternetShopContext))]
    [Migration("20230407064623_Work")]
    partial class Work
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Comment", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GoodId")
                        .HasColumnType("int");

                    b.Property<int?>("Comment1")
                        .HasColumnType("int")
                        .HasColumnName("Comment");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GoodId")
                        .HasName("PK__Comments__D7CB621FC22E83DA");

                    b.HasIndex("GoodId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Domain.Models.SavedAdress", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Apartament")
                        .HasColumnType("int");

                    b.Property<int?>("Building")
                        .HasColumnType("int");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId", "City")
                        .HasName("PK__SavedAdr__CD64864A75CB1880");

                    b.ToTable("SavedAdresses");
                });

            modelBuilder.Entity("Domain.Models.Sklad", b =>
                {
                    b.Property<int>("Idskalda")
                        .HasColumnType("int")
                        .HasColumnName("IDSkalda");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Idtovara")
                        .HasColumnType("int");

                    b.HasKey("Idskalda");

                    b.HasIndex("Idtovara");

                    b.ToTable("Sklad", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Tovari", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descryption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Tovari__3214EC279FF06789");

                    b.ToTable("Tovari", (string)null);
                });

            modelBuilder.Entity("Domain.Models.TovariList", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GoodId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GoodId")
                        .HasName("PK__TovariLi__D7CB621F3DEA98CA");

                    b.HasIndex("GoodId");

                    b.ToTable("TovariList", (string)null);
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("Auth")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC27B0C13CDF");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.Comment", b =>
                {
                    b.HasOne("Domain.Models.Tovari", "Good")
                        .WithMany("Comments")
                        .HasForeignKey("GoodId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__GoodId__300424B4");

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__UserId__2F10007B");

                    b.Navigation("Good");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.SavedAdress", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("SavedAdresses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SavedAdre__UserI__267ABA7A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Sklad", b =>
                {
                    b.HasOne("Domain.Models.Tovari", "IdtovaraNavigation")
                        .WithMany("Sklads")
                        .HasForeignKey("Idtovara")
                        .IsRequired()
                        .HasConstraintName("FK_Sklad_Tovari");

                    b.Navigation("IdtovaraNavigation");
                });

            modelBuilder.Entity("Domain.Models.TovariList", b =>
                {
                    b.HasOne("Domain.Models.Tovari", "Good")
                        .WithMany("TovariLists")
                        .HasForeignKey("GoodId")
                        .IsRequired()
                        .HasConstraintName("FK__TovariLis__GoodI__2C3393D0");

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("TovariLists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TovariLis__UserI__2B3F6F97");

                    b.Navigation("Good");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Tovari", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Sklads");

                    b.Navigation("TovariLists");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("SavedAdresses");

                    b.Navigation("TovariLists");
                });
#pragma warning restore 612, 618
        }
    }
}
